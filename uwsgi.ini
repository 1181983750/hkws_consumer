[uwsgi]
# 绑定http的端口
http = 0.0.0.0:60000
# 这是uwsgi监听队列的长度，默认较小，当需要大的并发时需要增加该值。需要配合Linux系统内核的配置net.core.somaxconn，也就是listen的值不能大于Linux系统设置的net.core.somaxconn值
# 可以配置Linux系统net.core.somaxconn = 10240。然后可以配置uwsgi listen = 10240
listen = 1024
# 通信的地址和端口(自己服务器的IP地址和端口) 同时监听socket和http 同时监听socket和http会导致没法使用nginx反向代理 全部放在server.sh内指定
#http-socket = 172.17.18.111:8001
#socket = 172.17.18.111:8001

# 项目路径
chdir = /root/project/hkws_xfj/
#项目中wsgi.py文件的目录，相对于项目目录
wsgi-file = httpxs/wsgi.py

# 守护进程
master=true
# 进程数
processes=4
# 线程数
threads=2

# 配置gevent的并发。线上建议：gevent设置500 process设置4-8。例如：process=4 gevent=500，那么最大并发数为：4 * 500 = 2000
#gevent=30
# 在不修改任何代码的情况下，使用猴子补丁，使django服务可以以协程并发的形式运行
#gevent-monkey-patch=true


# 虚拟环境 docker环境中不指定虚拟环境和pythonpath，因为docker本身就是一个环境
#home = /root/.virtualenvs/xfj
# 指定python解释器，部分系统需要指定到 site-packages 目录才可以正常运行
#pythonpath = %(home)/bin/python
# 日志文件地址，没有指定日志地址时，启动时会在前台启动。指定日志时在后台启动
# daemonize = ./logs/xfj.log
logto=/root/project/hkws_xfj/logs/uwsgi.log
# 指定依赖的虚拟环境
virtualenv=/root/.virtualenvs/hkws_xfj
#配置 pid 以及 status
stats=%(chdir)uwsgi/uwsgi.status

pidfile=%(chdir)uwsgi/uwsgi.pid


#自动给进程命名
auto-procname=true

#为进程指定前缀
procname-prefix-spaced=xfj_server

#设置工作进程每处理N个进程就会被回收重启
max-requests=5000

